# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'scanner_test.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import re

def scan_to_tokens(lines):
    comment = 0
    objects = []
    tokens = []
    for line in lines:
        objects.extend(line.split(' '))
    for object in objects:
        start_comment = re.search('^{', object)
        end_comment = re.search('}$', object)
        if (start_comment):
            comment = 1
        if (end_comment):
            comment = 0
        if (comment == 0):
            if (object.find('{') != -1 and object.find('{') != 0):
                object = object[0:object.find('{')]
                comment = 1
            if (
                    object == 'if' or object == 'then' or object == 'else' or object == 'end' or object == 'repeat' or object == 'until' or object == 'read' or object == 'write'):
                tokens.append(['Reserved Word', object])
                continue
            elif (
                    object == '+' or object == '-' or object == '*' or object == '/' or object == '=' or object == '<' or object == '>' or object == '(' or object == ')' or object == ';' or object == ':='):
                tokens.append(['Special Symbol', object])
                continue
            identifier = re.search('[a-zA-z]+;?', object)
            number = re.search('[0-9]+;?', object)
            if (identifier):
                if (object[len(object) - 1] == ';'):
                    tokens.append(['identifier', object[0:len(object) - 1]])
                    tokens.append(['Special Symbol', ';'])
                else:
                    tokens.append(['identifier', object])
            elif (number):
                if (object[len(object) - 1] == ';'):
                    tokens.append(['number', object[0:len(object) - 1]])
                    tokens.append(['Special Symbol', ';'])
                else:
                    tokens.append(['number', object])
    print(tokens)
    return tokens

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(969, 760)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.textBrowser_2 = QtWidgets.QTextBrowser(self.centralwidget)
        self.textBrowser_2.setGeometry(QtCore.QRect(600, 50, 300, 550))
        self.textBrowser_2.setObjectName("textBrowser_2")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(420, 570, 100, 30))
        self.pushButton.setObjectName("pushButton")
        self.textEdit = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit.setGeometry(QtCore.QRect(40, 50, 300, 550))
        self.textEdit.setObjectName("textEdit")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 969, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        def output_tokens():
            lines = self.textEdit.toPlainText()
            text = scan_to_tokens(lines)
            for token in text:
                self.textBrowser_2.append(str(token))

        self.pushButton.clicked.connect(output_tokens)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.pushButton.setText(_translate("MainWindow", "Start"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
